//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Busidex.Profile.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BusidexEntities : DbContext
    {
        public BusidexEntities()
            : base("name=BusidexEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_getAllCards_Result> usp_getAllCards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllCards_Result>("usp_getAllCards");
        }
    
        public virtual ObjectResult<usp_getCardsByCompany_Result> usp_getCardsByCompany(string company, Nullable<double> latitude, Nullable<double> longitude, Nullable<int> radiusInMiles)
        {
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(double));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(double));
    
            var radiusInMilesParameter = radiusInMiles.HasValue ?
                new ObjectParameter("radiusInMiles", radiusInMiles) :
                new ObjectParameter("radiusInMiles", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getCardsByCompany_Result>("usp_getCardsByCompany", companyParameter, latitudeParameter, longitudeParameter, radiusInMilesParameter);
        }
    
        public virtual ObjectResult<usp_getCardsByNameKeyword_Result> usp_getCardsByNameKeyword(string name, Nullable<double> latitude, Nullable<double> longitude, Nullable<int> radiusInMiles)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(double));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(double));
    
            var radiusInMilesParameter = radiusInMiles.HasValue ?
                new ObjectParameter("radiusInMiles", radiusInMiles) :
                new ObjectParameter("radiusInMiles", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getCardsByNameKeyword_Result>("usp_getCardsByNameKeyword", nameParameter, latitudeParameter, longitudeParameter, radiusInMilesParameter);
        }
    }
}
